// 模拟KV数据库实现，用于本地开发和测试环境
class MockKV { constructor() { this.data = new Map(); } async get(key) { return this.data.get(key) || null; } async put(key, value, options) { this.data.set(key, value); return undefined; } async delete(key) { this.data.delete(key); return undefined; } async list(options) { let keys = Array.from(this.data.keys()); if (options?.prefix) { keys = keys.filter(key => key.startsWith(options.prefix)); } if (options?.limit && keys.length > options.limit) { keys = keys.slice(0, options.limit); } return { keys: keys.map(key => ({ name: key })), list_complete: true, cursor: null }; } async getWithMetadata(key) { const value = this.data.get(key); return value ? { value, metadata: null } : null; } } // 创建默认的模拟KV实例 const mockKvInstance = new MockKV(); // 导出模拟KV类和实例 export { MockKV, mockKvInstance };