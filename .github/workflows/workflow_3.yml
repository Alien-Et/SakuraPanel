name: 适用于 Android 的 Python 3.10 和 pip (使用宿主机构建)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 安装宿主机依赖
        run: |
          sudo apt update
          sudo apt install -y build-essential zlib1g-dev libffi-dev libssl-dev libbz2-dev \
                              libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
                              libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
                              liblzma-dev git tar python3 python3-pip unzip binutils
          python3 --version
          pip3 --version

      - name: 设置 Android NDK (r27.2.12479018)
        uses: android-actions/setup-android@v2
        with:
          ndk-version: "27.2.12479018"

      - name: 验证 NDK 安装
        run: |
          echo "Android NDK 根目录: $ANDROID_NDK_ROOT"
          ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/

      - name: 设置交叉编译环境
        run: |
          export READELF=$(which readelf)
          if [ ! -f "$READELF" ]; then
            sudo apt install -y binutils
            export READELF=$(which readelf)
          fi
          echo "READELF=$READELF" >> $GITHUB_ENV
          export AR=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
          echo "AR=$AR" >> $GITHUB_ENV
          echo "RANLIB=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib" >> $GITHUB_ENV
          echo "CC=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++" >> $GITHUB_ENV

      - name: 下载并编译 Python 3.10
        run: |
          REQUIRED_PYTHON_VERSION="3.10.0"
          ANDROID_INSTALL_DIR="$GITHUB_WORKSPACE/android-rootfs/data"
          
          echo "正在下载并编译 Python $REQUIRED_PYTHON_VERSION..."
          wget https://www.python.org/ftp/python/$REQUIRED_PYTHON_VERSION/Python-$REQUIRED_PYTHON_VERSION.tgz
          tar -xzf Python-$REQUIRED_PYTHON_VERSION.tgz
          mv Python-$REQUIRED_PYTHON_VERSION cpython
          
          cd cpython
          ./configure \
            --host=aarch64-linux-android \
            --build=x86_64-linux-gnu \
            --prefix="$ANDROID_INSTALL_DIR" \
            --disable-ipv6 \
            --enable-optimizations \
            CC="$CC" \
            CXX="$CXX" \
            AR="$AR" \
            RANLIB="$RANLIB" \
            READELF="$READELF"
          
          make -j$(nproc)
          make install
          
          # 检查安装结果
          ls -l "$ANDROID_INSTALL_DIR/bin/python"*
          "$ANDROID_INSTALL_DIR/bin/python3.10" --version

      - name: 下载并编译 zlib
        run: |
          ANDROID_INSTALL_DIR="$GITHUB_WORKSPACE/android-rootfs/data"
          
          wget https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz -O zlib-1.2.13.tar.gz
          tar -xzf zlib-1.2.13.tar.gz
          
          cd zlib-1.2.13
          CC="$CC" ./configure --prefix="$ANDROID_INSTALL_DIR"
          make -j$(nproc)
          make install

      - name: 使用宿主机Python构建pip
        run: |
          ANDROID_INSTALL_DIR="$GITHUB_WORKSPACE/android-rootfs/data"
          
          # 下载get-pip.py
          wget https://bootstrap.pypa.io/get-pip.py -O get-pip.py
          
          # 使用宿主机Python构建pip到Android目录
          python3 get-pip.py \
            --prefix="$ANDROID_INSTALL_DIR" \
            --ignore-installed \
            --no-warn-script-location
          
          # 修复pip脚本的shebang
          find "$ANDROID_INSTALL_DIR/bin" -name "pip*" -type f | while read -r file; do
            if [ -f "$ANDROID_INSTALL_DIR/bin/python3.10" ]; then
              sed -i "1s|.*|#!/system/bin/python3.10|" "$file"
            else
              sed -i "1s|.*|#!/system/bin/python3|" "$file"
            fi
          done
          
          # 验证pip安装
          ls -l "$ANDROID_INSTALL_DIR/bin/pip"*
          grep "^#!" "$ANDROID_INSTALL_DIR/bin/pip" | head -n 1

      - name: 修复所有shebang和符号链接
        run: |
          ANDROID_INSTALL_DIR="$GITHUB_WORKSPACE/android-rootfs/data"
          
          # 修复Python脚本的shebang
          find "$ANDROID_INSTALL_DIR/bin" -type f | while read -r file; do
            if head -n 1 "$file" | grep -q "^#!"; then
              if [ -f "$ANDROID_INSTALL_DIR/bin/python3.10" ]; then
                sed -i "1s|.*|#!/system/bin/python3.10|" "$file"
              else
                sed -i "1s|.*|#!/system/bin/python3|" "$file"
              fi
            fi
          done
          
          # 修复符号链接
          find "$ANDROID_INSTALL_DIR" -type l | while read -r link; do
            target=$(readlink "$link")
            if [[ ! "$target" =~ ^/ ]]; then
              new_target="system/$(basename "$target")"
              ln -sf "$new_target" "$link"
            fi
          done

      - name: 打包源代码
        run: |
          tar -czvf source-code.tar.gz \
              Python-3.10.0.tgz \
              zlib-1.2.13.tar.gz \
              get-pip.py \
              cpython/ \
              zlib-1.2.13/

      - name: 打包Android产物
        run: |
          ANDROID_INSTALL_DIR="$GITHUB_WORKSPACE/android-rootfs/data"
          tar -czvf python-android-arm64.tar.gz \
              -C "$ANDROID_INSTALL_DIR" \
              --transform 's,^\./,system/,' .

      - name: 上传产物
        uses: actions/upload-artifact@v4
        with:
          name: python-3.10-android-arm64-with-pip
          path: |
            python-android-arm64.tar.gz
            source-code.tar.gz
