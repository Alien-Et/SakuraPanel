name: Python 3.13 for Android

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13 and Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt update -y
          sudo apt install -y \
              python3.13 python3.13-dev python3.13-venv \
              build-essential zlib1g-dev libffi-dev libssl-dev \
              libbz2-dev libreadline-dev libsqlite3-dev \
              libncurses5-dev libncursesw5-dev \
              xz-utils tk-dev libxml2-dev libxmlsec1-dev \
              wget curl llvm git tar unzip binutils

          python3.13 -m venv /opt/python3.13
          source /opt/python3.13/bin/activate

      - name: Download and Extract Android NDK
        run: |
          NDK_VERSION="27.2.12479018"
          NDK_URL="https://dl.google.com/android/repository/android-ndk-r27b-linux.zip"
          wget -q $NDK_URL -O android-ndk.zip
          unzip -q android-ndk.zip -d /opt
          echo "ANDROID_NDK_ROOT=/opt/android-ndk-r27b" >> $GITHUB_ENV
          echo "/opt/android-ndk-r27b/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH

      - name: Configure Android Toolchain
        run: |
          TOOLCHAIN="$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin"
          export CC="$TOOLCHAIN/aarch64-linux-android21-clang"
          export CXX="$TOOLCHAIN/aarch64-linux-android21-clang++"
          export AR="$TOOLCHAIN/llvm-ar"
          export RANLIB="$TOOLCHAIN/llvm-ranlib"

          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
          echo "AR=$AR" >> $GITHUB_ENV
          echo "RANLIB=$RANLIB" >> $GITHUB_ENV

      - name: Download Python Source
        run: |
          wget https://www.python.org/ftp/python/3.13.0/Python-3.13.0.tar.xz
          tar -xf Python-3.13.0.tar.xz
          mv Python-3.13.0 cpython

      - name: Patch Python Source (Disable LZMA)
        run: |
          cd cpython
          # 完全禁用 LZMA 模块
          sed -i '/lzma/d' Modules/Setup
          # 删除 LZMA 源文件
          rm -f Modules/_lzmamodule.c
          # 强制配置禁用 LZMA
          echo "ac_cv_lib_lzma_lzma_code=no" >> config.site
          echo "ac_cv_header_lzma_h=no" >> config.site

      - name: Configure Python
        run: |
          cd cpython
          ./configure \
            --host=aarch64-linux-android \
            --build=x86_64-linux-gnu \
            --prefix=/opt/python-android \
            --disable-ipv6 \
            --without-lzma \
            --with-build-python=$(which python3.13) \
            CC="$CC" CXX="$CXX" AR="$AR" RANLIB="$RANLIB"

      - name: Build Python
        run: |
          cd cpython
          make -j$(nproc)

      - name: Install Python
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-rootfs
          cd cpython
          make install DESTDIR=$GITHUB_WORKSPACE/android-rootfs

      - name: Package Artifacts
        run: |
          tar -czvf python-3.13-android-arm64.tar.gz -C $GITHUB_WORKSPACE/android-rootfs/opt/python-android .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-3.13-android-arm64
          path: python-3.13-android-arm64.tar.gz
