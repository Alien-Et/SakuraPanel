name: Build Python 3.12 and Pip for Android ARM64

on:
  push:
    branches: [main]
  workflow_dispatch:  # 支持手动触发

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出代码
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. 安装基本工具
      - name: Install Prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip git build-essential

      # 3. 设置 Java 环境（NDK 依赖）
      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 4. 下载和配置 Android NDK
      - name: Setup Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
          unzip -q android-ndk-r26b-linux.zip -d $HOME/ndk
          echo "NDK=$HOME/ndk/android-ndk-r26b" >> $GITHUB_ENV
          echo "$HOME/ndk/android-ndk-r26b/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_PATH
          # 验证 NDK 是否可用
          which aarch64-linux-android24-clang || echo "NDK toolchain not found"

      # 5. 安装本地 Python（用于交叉编译）
      - name: Install Local Python
        run: |
          sudo apt-get install -y python3.12 python3.12-dev python3-pip
          python3.12 --version
          sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.12 1
          python3 --version  # 确认指向 Python 3.12

      # 6. 下载 Python 源码
      - name: Fetch Python Source
        run: |
          git clone --depth 1 --branch v3.12.2 https://github.com/python/cpython.git python-src
          cd python-src
          git submodule update --init

      # 7. 配置交叉编译环境
      - name: Configure Python Build
        working-directory: python-src
        run: |
          export PATH=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export TARGET=aarch64-linux-android
          export API=24
          export CC=$TARGET$API-clang
          export CXX=$TARGET$API-clang++
          export AR=llvm-ar
          export LD=$TARGET-ld
          export RANLIB=llvm-ranlib
          export CFLAGS="-fPIE -fPIC"
          export LDFLAGS="-pie"
          mkdir -p ../python-install
          ./configure \
            --host=$TARGET \
            --build=x86_64-linux-gnu \
            --prefix=$PWD/../python-install \
            --enable-shared \
            --disable-ipv6 \
            --with-build-python=/usr/bin/python3
          # 输出配置结果
          cat config.log | tail -n 20

      # 8. 编译和安装 Python
      - name: Build and Install Python
        working-directory: python-src
        run: |
          make -j$(nproc)
          make install
          # 验证安装
          ls -lh ../python-install/bin/python3

      # 9. 安装 pip
      - name: Install Pip
        working-directory: python-install
        run: |
          wget -q https://bootstrap.pypa.io/get-pip.py
          ./bin/python3 get-pip.py
          # 验证 pip
          ls -lh bin/pip3

      # 10. 创建 Magisk 模块
      - name: Create Magisk Module
        run: |
          mkdir -p magisk-module/system/bin
          mkdir -p magisk-module/system/lib
          mkdir -p magisk-module/system/lib/python3.12
          # 复制二进制文件
          cp python-install/bin/python3 magisk-module/system/bin/python3
          cp python-install/bin/pip3 magisk-module/system/bin/pip3
          # 复制共享库
          cp python-install/lib/libpython3.12.so magisk-module/system/lib/
          # 复制标准库
          cp -r python-install/lib/python3.12 magisk-module/system/lib/
          # 创建模块配置文件
          cat << EOF > magisk-module/module.prop
id=python3-arm64
name=Python 3.12 for Android ARM64
version=v3.12.2
versionCode=31202
author=Alien-Et
description=Python 3.12 and pip for Android ARM64, built with NDK r26b
EOF
          # 添加环境变量脚本
          mkdir -p magisk-module/common
          cat << EOF > magisk-module/common/post-fs-data.sh
#!/system/bin/sh
export PYTHONPATH=/system/lib/python3.12:/system/lib/python3.12/lib-dynload
EOF
          chmod +x magisk-module/common/post-fs-data.sh

      # 11. 打包 Magisk 模块
      - name: Package Magisk Module
        run: |
          cd magisk-module
          zip -r ../python3-arm64-magisk.zip .
          ls -lh ../python3-arm64-magisk.zip

      # 12. 发布到 GitHub Releases
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          tag_name: "v3.12.2-${{ github.run_number }}"
          name: "Python 3.12 ARM64 Magisk Module #${{ github.run_number }}"
          body: |
            Compiled Python 3.12 and pip for Android ARM64 using NDK r26b.
            - Python Version: 3.12.2
            - NDK Version: r26b
            - Architecture: ARM64 (aarch64)
          files: python3-arm64-magisk.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}