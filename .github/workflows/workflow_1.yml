name: Build Python 3.13 for Android ARM64

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python 3.13 and Dependencies
        run: |
          # 安装基础依赖（包含 liblzma-dev）
          sudo apt-get update -y
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get update -y
          sudo apt-get install -y \
              python3.13 python3.13-dev python3.13-venv \
              build-essential zlib1g-dev libffi-dev libssl-dev \
              libbz2-dev libreadline-dev libsqlite3-dev \
              liblzma-dev libncurses5-dev libncursesw5-dev \
              xz-utils tk-dev libxml2-dev libxmlsec1-dev \
              wget curl llvm git tar unzip binutils

          # 创建虚拟环境
          python3.13 -m venv /opt/python3.13
          source /opt/python3.13/bin/activate

      - name: Set up Android NDK
        uses: android-actions/setup-android@v2
        with:
          ndk-version: "25.2.9519653"  # 使用稳定版本

      - name: Configure Android Toolchain
        run: |
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
          echo "$ANDROID_NDK_ROOT" >> $GITHUB_PATH

          TOOLCHAIN="$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin"
          export CC="$TOOLCHAIN/aarch64-linux-android21-clang"
          export CXX="$TOOLCHAIN/aarch64-linux-android21-clang++"
          export AR="$TOOLCHAIN/llvm-ar"
          export RANLIB="$TOOLCHAIN/llvm-ranlib"
          export READELF=$(which readelf)

          echo "CC=$CC" >> $GITHUB_ENV
          echo "CXX=$CXX" >> $GITHUB_ENV
          echo "AR=$AR" >> $GITHUB_ENV
          echo "RANLIB=$RANLIB" >> $GITHUB_ENV
          echo "READELF=$READELF" >> $GITHUB_ENV

      - name: Download Python 3.13 Source
        run: |
          wget https://www.python.org/ftp/python/3.13.0/Python-3.13.0.tar.xz
          tar -xf Python-3.13.0.tar.xz
          mv Python-3.13.0 cpython

      - name: Patch _lzmamodule.c (Optional)
        run: |
          # 如果仍然找不到 lzma.h，可以禁用 LZMA 模块
          sed -i 's/#define HAVE_LZMA 1/#define HAVE_LZMA 0/' cpython/Modules/Setup

      - name: Configure Python
        run: |
          cd cpython
          cat <<EOF > config.site
          ac_cv_file__dev_ptmx=yes
          ac_cv_file__dev_ptc=no
          ac_cv_lib_lzma_lzma_code=no  # 显式禁用 LZMA 检查
          EOF

          ./configure --host=aarch64-linux-android \
                     --build=x86_64-linux-gnu \
                     --disable-ipv6 \
                     --without-lzma \
                     --with-build-python=$(which python3.13) \
                     CC="$CC" \
                     CXX="$CXX" \
                     AR="$AR" \
                     RANLIB="$RANLIB" \
                     READELF="$READELF"

      - name: Build Python
        run: |
          cd cpython
          make -j$(nproc)

      - name: Install Python
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-rootfs/data
          cd cpython
          make install prefix=$GITHUB_WORKSPACE/android-rootfs/data

      - name: Package Artifacts
        run: |
          tar -czvf python-3.13-android-arm64.tar.gz -C android-rootfs/data .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-3.13-android-arm64
          path: python-3.13-android-arm64.tar.gz
