name: Build Python and zlib for Android ARM64

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential zlib1g-dev libffi-dev libssl-dev libbz2-dev \
                              libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
                              libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
                              liblzma-dev git tar python3 python3-pip unzip binutils
          python3 --version
          pip3 --version

      - name: Cache Android NDK
        uses: actions/cache@v4
        with:
          path: ~/android-ndk
          key: android-ndk-r21d

      - name: Download and Set Up Android NDK
        run: |
          if [ -d "$HOME/android-ndk/android-ndk-r21d" ]; then
            echo "NDK already exists, skipping download."
          else
            echo "Downloading NDK..."
            mkdir -p ~/android-ndk
            wget -O ~/android-ndk/android-ndk-r21d-linux.zip https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip
            unzip -o -d ~/android-ndk ~/android-ndk/android-ndk-r21d-linux.zip
          fi
          export ANDROID_NDK_HOME=$HOME/android-ndk/android-ndk-r21d
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV
          echo "$ANDROID_NDK_HOME" >> $GITHUB_PATH

      - name: Download Python Source Code
        run: |
          PYTHON_VERSION="3.11.0"
          wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz
          tar -xzf Python-${PYTHON_VERSION}.tgz
          mv Python-${PYTHON_VERSION} cpython

      - name: Download and Extract zlib
        run: |
          wget https://github.com/madler/zlib/archive/refs/tags/v1.2.13.tar.gz -O zlib-1.2.13.tar.gz
          tar -xvf zlib-1.2.13.tar.gz

      - name: Set Cross-Compile Tools
        run: |
          export CROSS_COMPILE=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-
          export READELF=$(which readelf)
          if [ ! -f "$READELF" ]; then
            sudo apt install -y binutils
            export READELF=$(which readelf)
          fi
          echo "READELF=$READELF" >> $GITHUB_ENV
          export AR=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar
          echo "AR=$AR" >> $GITHUB_ENV

      - name: Configure and Compile Python
        run: |
          cd cpython
          export CONFIG_SITE=config.site
          cat <<EOF > $CONFIG_SITE
          ac_cv_file__dev_ptmx=yes
          ac_cv_file__dev_ptc=no
          EOF

          BUILD_PYTHON=$(which python3)
          ./configure --host=aarch64-linux-android --build=x86_64-linux-gnu \
                      --enable-shared \
                      --disable-ipv6 \
                      --with-build-python=$BUILD_PYTHON \
                      CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
                      CXX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++ \
                      AR=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ar \
                      RANLIB=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-ranlib \
                      READELF=$READELF

          make -j$(nproc)

      - name: Compile zlib
        run: |
          cd zlib-1.2.13
          CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang \
          ./configure --prefix=$GITHUB_WORKSPACE/android-rootfs/data
          make -j$(nproc)

      - name: Install Python and zlib to Simulated Android Root
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-rootfs/data
          
          # Install Python
          cd cpython
          make install prefix=$GITHUB_WORKSPACE/android-rootfs/data
          
          # Install zlib
          cd ../zlib-1.2.13
          make install

      - name: Package Clean Installation
        run: |
          tar -czvf python-zlib-android-data.tar.gz -C android-rootfs/data .

      - name: Upload Clean Installation
        uses: actions/upload-artifact@v4
        with:
          name: python-zlib-android-data
          path: python-zlib-android-data.tar.gz

      - name: Archive Full Build Workspace
        run: |
          tar -czvf build-workspace-full.tar.gz \
              cpython/ \
              zlib-1.2.13/ \
              android-rootfs/

      - name: Upload Full Workspace
        uses: actions/upload-artifact@v4
        with:
          name: build-workspace-full
          path: build-workspace-full.tar.gz